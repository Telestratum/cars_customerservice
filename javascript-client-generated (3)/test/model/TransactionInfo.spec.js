/*
 * Customer Management Service
 * A service for placing orders and transactions
 *
 * OpenAPI spec version: 1.0.0
 * Contact: hariprasath.narayanasamy@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.42
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CustomerManagementService);
  }
}(this, function(expect, CustomerManagementService) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('TransactionInfo', function() {
      beforeEach(function() {
        instance = new CustomerManagementService.TransactionInfo();
      });

      it('should create an instance of TransactionInfo', function() {
        // TODO: update the code to test TransactionInfo
        expect(instance).to.be.a(CustomerManagementService.TransactionInfo);
      });

      it('should have the property modelId (base name: "model_id")', function() {
        // TODO: update the code to test the property modelId
        expect(instance).to.have.property('modelId');
        // expect(instance.modelId).to.be(expectedValueLiteral);
      });

      it('should have the property userId (base name: "user_id")', function() {
        // TODO: update the code to test the property userId
        expect(instance).to.have.property('userId');
        // expect(instance.userId).to.be(expectedValueLiteral);
      });

      it('should have the property transactionAmount (base name: "transaction_amount")', function() {
        // TODO: update the code to test the property transactionAmount
        expect(instance).to.have.property('transactionAmount');
        // expect(instance.transactionAmount).to.be(expectedValueLiteral);
      });

      it('should have the property _date (base name: "date")', function() {
        // TODO: update the code to test the property _date
        expect(instance).to.have.property('_date');
        // expect(instance._date).to.be(expectedValueLiteral);
      });

      it('should have the property timing (base name: "timing")', function() {
        // TODO: update the code to test the property timing
        expect(instance).to.have.property('timing');
        // expect(instance.timing).to.be(expectedValueLiteral);
      });

      it('should have the property accountFrom (base name: "account_from")', function() {
        // TODO: update the code to test the property accountFrom
        expect(instance).to.have.property('accountFrom');
        // expect(instance.accountFrom).to.be(expectedValueLiteral);
      });

      it('should have the property accountTo (base name: "account_to")', function() {
        // TODO: update the code to test the property accountTo
        expect(instance).to.have.property('accountTo');
        // expect(instance.accountTo).to.be(expectedValueLiteral);
      });

    });
  });

}));
